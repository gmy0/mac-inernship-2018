/*
Deployment script for exercise1

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "exercise1"
:setvar DefaultFilePrefix "exercise1"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'The following operation was generated from a refactoring log file b057ba7e-0bf8-4de5-8431-811fe49c4a32';

PRINT N'Rename [dbo].[User].[Passwword] to Password';


GO
EXECUTE sp_rename @objname = N'[dbo].[User].[Passwword]', @newname = N'Password', @objtype = N'COLUMN';


GO
PRINT N'Creating [dbo].[PrintName]...';


GO
CREATE FUNCTION [dbo].[PrintName]
(
	@FirstName nchar(10),
	@LastName nchar(10)
)
RETURNS INT
AS
BEGIN
	RETURN @FirstName + ' ' + @LastName
END
GO
PRINT N'Creating [dbo].[AddUser]...';


GO
CREATE PROCEDURE [dbo].[AddUser]
	@Email nchar(50),
	@Username nchar(50),
	@Password nchar(20),
	@FirstName nchar(10),
	@LastName nchar(10)
AS
	INSERT INTO [User] (Email, Username, [Password], FirstName,LastName)
	VALUES (@Email,@Username,HASHBYTES ('MD5',@Password),@FirstName,@LastName);
RETURN 0
GO
PRINT N'Creating [dbo].[Login]...';


GO
CREATE PROCEDURE [dbo].[Login]
	@username nchar(50),
	@password nchar(30)
AS
	SELECT PrintName(FirstName,LastName) From [User] 
	WHERE ((Username=@username or Email=@username) and [Password]=HASHBYTES ('MD5',@password))
RETURN 0
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b057ba7e-0bf8-4de5-8431-811fe49c4a32')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b057ba7e-0bf8-4de5-8431-811fe49c4a32')

GO

GO
PRINT N'Update complete.';


GO
